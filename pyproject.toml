[project]
name = "flask-merchants"
version = "2025.3.1"
description = "Multipurpose payment platform for Flask-Admin"
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "alembic>=1.14.0",
    "flask (>=3.1.1,<4.0.0)",
    "flask-admin[sqlalchemy-with-utils,translation] (==2.0.0a4)",
    "flask-migrate>=4.0.7",
    "flask-security[babel,common,sqla] (>=5.6.2,<6.0.0)",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.20",
    "python-slugify>=8.0.4",
    "sqlalchemy (>=2.0.42,<3.0.0)",
    "sqlalchemy-utils>=0.41.2",
    "typing-extensions (>=4.14.1,<5.0.0)",

]

[project.optional-dependencies]
dev = [
    "black (>=25.1.0,<26.0.0)",
    "coverage (>=7.10.2,<8.0.0)",
    "hypothesis>=6.123.2",
    "mkdocs-material>=9.5.49",
    "mkdocstrings[python]>=0.27.0",
    "pre-commit (>=4.3.0,<5.0.0)",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-flask>=1.3.0",
    "rich>=13.9.4",
    "flask-debugtoolbar>=0.16.0",
]
deploy = ["gunicorn (>=23.0.0,<24.0.0)"]

[tool.poetry]
packages = [
    { include = "flask_merchants" },
    { include = "merchants" },
    { include = "store" },
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
source = ["flask_merchants", "merchants", "store"]
omit = ["tests/*", "*/__init__.py", "*/migrations/*"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
show_missing = true
fail_under = 0

[tool.pytest.ini_options]
addopts = "-v --cov=flask_merchants --cov=merchants --cov=store --cov-report=xml --cov-report=term"
testpaths = ["tests"]
python_files = ["test*.py"]

[tool.black]
line-length = 119
target-version = ['py310']

[tool.ruff]
line-length = 119
target-version = "py310"
